#include<stdio.h>#include<stdlib.h>#include<malloc.h>#include<stdbool.h>#define maxsize 50typedef struct{    int i;    int j;}node;typedef struct{    node element[maxsize];    int top;}nodestack;int initnodestack(nodestack *s){    s->top=-1;}void push(nodestack *s,node e){    s->top++;    s->element[s->top]=e;}void pop(nodestack *s,node *e){    if(s->top==-1)       printf("error");       return ;    *e=s->element[s->top];    s->top--;}void lihao(int r[][6],nodestack *s){    node m,n;    int k;    m.i=1;    m.j=1;    push(s,m);    r[1][1]=2;    do    {        if(m.i==5&&m.j==5)        {            printf("找到了通路:");        for(k=0;k<s->top;k++)        {        printf("(");        printf("%d",(s->element[k]).i);        printf(",");        printf("%d",(s->element[k]).j);        printf(")");        printf("---->");        }        printf("(");        printf("%d",(s->element[k]).i);        printf(",");        printf("%d",(s->element[k]).j);        printf(")");            return ;        }        if(r[m.i][m.j+1]==0)        {            m.i=m.i;            m.j=m.j+1;            push(s,m);            r[m.i][m.j]=2;            continue;        }         if(r[m.i+1][m.j]==0)        {           m.i=m.i+1;           m.j=m.j;           push(s,m);           r[m.i][m.j]=2;           continue;        }         if(r[m.i][m.j-1]==0)        {           m.i=m.i;           m.j=m.j-1;           push(s,m);           r[m.i][m.j]=2;           continue;        }         if(r[m.i-1][m.j]==0)        {           m.i=m.i-1;           m.j=m.j;           push(s,m);           r[m.i][m.j]=2;           continue;        }        pop(s,&n);        m=s->element[s->top];    }while(s->top!=-1);    printf("没找到通路！");    return ;}int main(){    int r[6][6];    int i;    int j;    for(i=1;i<=5;i++)    {        for(j=1;j<=5;j++)        {            scanf("%d",&r[i][j]);        }    }    nodestack s;    initnodestack(&s);    lihao(r,&s);    return 0;}
