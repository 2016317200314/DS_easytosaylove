
#include<stdio.h>#include<stdlib.h>#include<malloc.h>#define maxsize 9void lihao(int newr[],int result[],int r[][9],int cq[]){    int i,j,pre=0,group=1,x,k;    int front=8;    int rear=8;    do{    front=(front+1)%maxsize;    i=cq[front];    if(i<pre)    {        group++;        result[i-1]=group;        for(j=0;j<9;j++)        {            newr[j]=r[i-1][j];        }    }    else if(newr[i-1]!=0)    {        rear=(rear+1)%maxsize;        cq[rear]=i;    }    else    {        result[i-1]=group;        for(j=0;j<9;j++)        {            newr[j]=newr[j]+r[i-1][j];        }    }    pre=i;    }while(front!=rear);    for(k=1;k<=group;k++)    {        for(j=0;j<9;j++)        {            if(result[j]==k)            {                printf("%d ",j+1);            }        }        printf("\n");    }}int main(){    int cq[9]={0,0,0,0,0,0,0,0,0};    int newr[9]={0,0,0,0,0,0,0,0,0};    int result[9]={0,0,0,0,0,0,0,0,0};    int i;    for(i=0;i<9;i++)    {        cq[i]=i+1;    }    int r[9][9]={{0,1,0,0,0,0,0,0,0},                 {1,0,0,0,1,1,0,1,1},                 {0,0,0,0,0,1,1,0,0},                 {0,0,0,0,1,0,0,0,1},                 {0,1,0,1,0,1,1,0,1},                 {0,1,1,0,1,0,1,0,0},                 {0,0,1,0,1,1,0,0,0},                 {0,1,0,0,0,0,0,0,0},                 {0,1,0,1,1,0,0,0,0}};    lihao(newr,result,r,cq);    return 0;}
