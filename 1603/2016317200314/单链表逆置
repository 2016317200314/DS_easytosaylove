#include<stdio.h>
#include<stdlib.h>
typedef int ElemType;
typedef struct Node
{
    ElemType data;
    struct Node *next;
}Node,*Linklist;
void Initlist(Linklist *L)
{
    *L=(Linklist)malloc(sizeof(Node));
    (*L)->next=NULL;
}
void CreatFromHead(Linklist *L)
{
    int i,len,c;
    Node *s;
    printf("Input the length of numbers:");
    scanf("%d",&len);
    printf("Input numbets:");
    for(i=0;i<len;i++)
    {
        scanf("%d",&c);
        s=(Node*)malloc(sizeof(Node));
        s->data=c;
        s->next=(*L)->next;
        (*L)->next=s;
    }
}
void CreatFromTail(Linklist *L)
{
    int i,len,c;
    Node *s,*p;
    p=(*L);
    printf("Input the length of numbers:");
    scanf("%d",&len);
    printf("Input numbets:");
    for(i=0;i<len;i++)
    {
        scanf("%d",&c);
        s=(Node*)malloc(sizeof(Node));
        s->data=c;
        p->next=s;
        p=s;
    }
    p->next=NULL;
}
void Display(Linklist *L)
{
    Node *p;
    p=(*L);
    while(p->next!=NULL)
    {
        p=p->next;
        printf("%d",p->data);
        if(p->next!=NULL)
            printf(" ");
    }
    printf("\n");
}
void Inverse(Linklist *L)
{
    Node *p,*r,*q;
    p=(*L)->next;
    q=r=NULL;
    while(p)
    {
        q=p->next;
        p->next=r;
        r=p;
        p=q;
    }
    (*L)->next=r;
}
int main()
{
    Linklist L1,L2;
    Initlist(&L1),Initlist(&L2);
    CreatFromHead(&L1),CreatFromTail(&L2);
    Display(&L1),Display(&L2);

    Inverse(&L1);
    Display(&L1);
    Inverse(&L2);
    Display(&L2);
    return 0;
}
